on:
  push

jobs:
  build-and-publish-docker:
    name: Build and publish testing environment docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Make cache folder
        run: mkdir ~/cache
      - name: Cache Dockerfile
        id: cache-docker
        uses: actions/cache@v2
        with:
          path: ~/cache/Dockerfile
          key: ${{ runner.os }}-Dockerfile-${{ hashFiles('Dockerfile') }}
      - name: touch ~/cache/Dockerfile
        run: touch ~/cache/Dockerfile
      - name: compare Dockerfile with cache
        id: diff
        run: |
            if diff Dockerfile ~/cache/Dockerfile > /dev/null; then
                echo ::set-output name=changed::no
            else
                echo ::set-output name=changed::yes
            fi
      - name: Copy Dockerfile to ~/cache/Dockerfile
        run: cp Dockerfile ~/cache/Dockerfile

      - name: Build and push testing Docker image with exafmm
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: mscroggs/bempp-cl-test
          tags: dev-env-exafmm
          target: bempp-dev-env-with-exafmm
          cache_froms: mscroggs/bempp-cl-test:dev-env-exafmm
        if: steps.diff.outputs.changed == 'yes'
      - name: Build and push testing Docker image with pyexafmm
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: mscroggs/bempp-cl-test
          tags: dev-env-pyexafmm
          target: bempp-dev-env-with-pyexafmm
          cache_froms: mscroggs/bempp-cl-test:dev-env-pyexafmm
        if: steps.diff.outputs.changed == 'yes'
  
  style-checks:
    name: Run style checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: pip3 install pydocstyle flake8
      - run: |
            python3 -m flake8 bempp
            python3 -m flake8 test
        name: Run flake8 checks
      - run: python3 -m pydocstyle bempp/api
        name: Run pydocstyle checks

  build-and-test-with-exafmm:
    name: Build and run tests with ExaFMM
    needs: build-and-publish-docker
    runs-on: ubuntu-latest
    container:
      image: mscroggs/bempp-cl-test:dev-env-exafmm
    steps:
      - uses: actions/checkout@v2
      - run: python3 setup.py install
        name: Install Bempp
#      - run: python3 -m pytest --durations=50 test/unit
#        name: Run Bempp unit tests
